using System;
using Aspose.Cells;
using Aspose.Cells.Pivot;

namespace PivotTableExample
{
    class Program
    {
        static void Main(string[] args)
        {
            Workbook workbook = new Workbook("hazır_tablo.xlsx");

            Worksheet dataSheet = workbook.Worksheets[0];                                     // İlk sayfa veri kaynağı olacak
            Worksheet pivotSheet = workbook.Worksheets.Add("Pivot");                          // Yeni pivot çalışma sayfası oluşturma

            PivotTableCollection pivotTables = pivotSheet.PivotTables;

            Cells cells = dataSheet.Cells;

            int maxRow = cells.MaxDataRow;
            int originalColumnCount = cells.MaxDataColumn + 1;                                // Mevcut veri sütunu sayısı
            int newColumnStartIndex = originalColumnCount;                                    // Yeni sütunların başlangıç indeksi

            cells.InsertColumns(newColumnStartIndex, 4);                                      // Yeni sütunları ekleyin
            cells[0, newColumnStartIndex].PutValue("Ay");
            cells[0, newColumnStartIndex + 1].PutValue("3 Aylık Dönem");
            cells[0, newColumnStartIndex + 2].PutValue("Yıl");
            cells[0, newColumnStartIndex + 3].PutValue("Ay İsmi");

            for (int i = 1; i <= maxRow; i++)
            {
                Cell dateCell = cells[i, 4];                                                  // 5. sütundaki tarih hücresini al

                if (dateCell.Type == CellValueType.IsDateTime)
                {
                    DateTime dateTime = dateCell.DateTimeValue;

                    cells[i, newColumnStartIndex + 2].PutValue(dateTime.Year);                // Yıl sütununa yılı yerleştir
                    cells[i, newColumnStartIndex].PutValue(dateTime.Month);                   // Ay sütununa ayı yerleştir
                    int quarter = (dateTime.Month - 1) / 3 + 1;                               // Aydan çeyrek hesapla
                    cells[i, newColumnStartIndex + 1].PutValue(quarter);                      // Çeyrek sütununa çeyreği yerleştir

                    string monthName = GetMonthName(dateTime.Month);                          // Ay isimlerini alın
                    cells[i, newColumnStartIndex + 3].PutValue(monthName);                    // Ay İsmi sütununa ay ismini yerleştir
                }
            }

            Style numericStyle = workbook.CreateStyle();                                      // Sayısal format stilini oluşturun
            numericStyle.Number = 1;

            for (int i = 1; i <= maxRow; i++)
            {
                cells[i, newColumnStartIndex].SetStyle(numericStyle);                         // Ay sütunu 
                cells[i, newColumnStartIndex + 1].SetStyle(numericStyle);                     // 3 Aylık Dönem sütunu
                cells[i, newColumnStartIndex + 2].SetStyle(numericStyle);                     // Yıl sütunu
            }

            string sourceData = $"Sheet1!A1:{GetColumnName(newColumnStartIndex + 3)}{maxRow + 1}";
            string destCellName = "A1";

            int index = pivotTables.Add(sourceData, destCellName, "PivotTable");
            PivotTable pivotTable = pivotTables[index];

            pivotTable.RowGrand = true;
            pivotTable.ColumnGrand = true;
            pivotTable.IsAutoFormat = true;
            pivotTable.AutoFormatType = PivotTableAutoFormatType.Report6;

            pivotTable.AddFieldToArea(PivotFieldType.Row, 1);
            pivotTable.AddFieldToArea(PivotFieldType.Row, 0);
            pivotTable.AddFieldToArea(PivotFieldType.Data, 2);
            pivotTable.AddFieldToArea(PivotFieldType.Data, 3);
            pivotTable.AddFieldToArea(PivotFieldType.Column, newColumnStartIndex + 3);        // Ay İsmi kısmını sütuna ekle
            pivotTable.AddFieldToArea(PivotFieldType.Column, pivotTable.DataField);           // Değerler kısımını sütuna yerleştir
            pivotTable.AddFieldToArea(PivotFieldType.Page, newColumnStartIndex + 2);          // Yıl kısmını filtreye ekle
            pivotTable.AddFieldToArea(PivotFieldType.Page, newColumnStartIndex + 1);          // 3 Aylık Dönem kısmını filtreye ekle

            PivotField monthNameField = pivotTable.ColumnFields[0];                           // Ay isimlerini küçükten büyüğe sıralama
            monthNameField.IsAutoSort = true;
            monthNameField.IsAscendSort = true;

            double exchangeRate = 0.028;                                                      // Euro'ya dönüşüm kuru

            Style euroStyle = workbook.CreateStyle();                                         // Euro stilini oluşturma
            euroStyle.Custom = "€0.00";

            Style thousandSeparatorStyle = workbook.CreateStyle();                            // Binlik ayıraç stilini oluşturma
            thousandSeparatorStyle.Custom = "#,###";

            for (int i = 0; i <= cells.MaxDataRow; i++)
            {
                Cell cell3 = cells[i, 2];                                                     // İkinci sütundaki hücreleri al
                if (cell3.Type == CellValueType.IsNumeric)
                {
                    double value = cell3.DoubleValue;
                    cell3.PutValue(value * exchangeRate);                                     // Değeri euro kuru ile çarp
                    cell3.SetStyle(euroStyle);                                                // Euro simgesi stilini uygula
                }
                Cell cell4 = cells[i, 3];                                                     // 3. sütundaki hücreleri al
                if (cell4.Type == CellValueType.IsNumeric)
                {
                    cell4.SetStyle(thousandSeparatorStyle);                                   // Binlik ayıraç stilini hücreye uygula
                }
            }

            pivotTable.DataFields[0].NumberFormat = euroStyle.Custom;                         // 1. data alanına euro simgesi uyguluyor
            pivotTable.DataFields[1].NumberFormat = thousandSeparatorStyle.Custom;            // 2. data alanına binlik ayıraç uyguluyor

            workbook.Save("pivot_tablo.xlsx");

        }

        // Ay isimlerini almak için fonksiyon
        public static string GetMonthName(int month)
        {
            string[] monthNames = { "Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık" };
            return monthNames[month - 1];
        }

        // Sütun indeksinden sütun adı elde etmek için yardımcı fonksiyon
        private static string GetColumnName(int columnIndex)
        {
            const int AlphabetLength = 26;
            string columnName = string.Empty;
            while (columnIndex >= 0)
            {
                columnName = (char)('A' + columnIndex % AlphabetLength) + columnName;
                columnIndex = columnIndex / AlphabetLength - 1;
            }
            return columnName;
        }
    }
}
